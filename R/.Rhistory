trt = 'Ax'
ph = phs[1]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity, colour=Replicate)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(title=paste("pH",ph,sep=" "), x="Voltage (V)", y = "Velocity (µm/s)")
# setwd(paste(path,"figs",sep="/"))
ggsave(paste("pH_",ph,".eps", sep=""), width = 5, height = 4, units = "in")
# stat test
# i = 3; j = 4;
# g1 = df$Value[df[,1]==trt[i]]
# g2 = df$Value[df[,1]==trt[j]]
# res <- t.test(g1, g2, alternative='two.sided', paired=FALSE)
# sprintf("t test %s vs %s",trt[i],trt[j])
# print(res)
source("~/Documents/GitHub/ek-ptv/R/plot_by_param.R")
path
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity, colour='black')) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(legend.position = "none")
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(legend.position = "none")
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
# stat test
# i = 3; j = 4;
# g1 = df$Value[df[,1]==trt[i]]
# g2 = df$Value[df[,1]==trt[j]]
# res <- t.test(g1, g2, alternative='two.sided', paired=FALSE)
# sprintf("t test %s vs %s",trt[i],trt[j])
# print(res)
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(legend.position = "none")
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 5, height = 4, units = "in")
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 5, height = 4, units = "in")
# stat test
# i = 3; j = 4;
# g1 = df$Value[df[,1]==trt[i]]
# g2 = df$Value[df[,1]==trt[j]]
# res <- t.test(g1, g2, alternative='two.sided', paired=FALSE)
# sprintf("t test %s vs %s",trt[i],trt[j])
# print(res)
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 1/26/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[1]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
geom_boxplot(lwd=0.5) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.25),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
# stat test
# i = 3; j = 4;
# g1 = df$Value[df[,1]==trt[i]]
# g2 = df$Value[df[,1]==trt[j]]
# res <- t.test(g1, g2, alternative='two.sided', paired=FALSE)
# sprintf("t test %s vs %s",trt[i],trt[j])
# print(res)
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 1/26/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[1]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
geom_boxplot(lwd=0.5) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
# stat test
# i = 3; j = 4;
# g1 = df$Value[df[,1]==trt[i]]
# g2 = df$Value[df[,1]==trt[j]]
# res <- t.test(g1, g2, alternative='two.sided', paired=FALSE)
# sprintf("t test %s vs %s",trt[i],trt[j])
# print(res)
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 1/26/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[1]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
geom_boxplot(lwd=0.1) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
# stat test
# i = 3; j = 4;
# g1 = df$Value[df[,1]==trt[i]]
# g2 = df$Value[df[,1]==trt[j]]
# res <- t.test(g1, g2, alternative='two.sided', paired=FALSE)
# sprintf("t test %s vs %s",trt[i],trt[j])
# print(res)
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="grey", size=0.4, alpha=0.9) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="grey", size=0.4) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="grey50", size=0.15) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
# stat test
# i = 3; j = 4;
# g1 = df$Value[df[,1]==trt[i]]
# g2 = df$Value[df[,1]==trt[j]]
# res <- t.test(g1, g2, alternative='two.sided', paired=FALSE)
# sprintf("t test %s vs %s",trt[i],trt[j])
# print(res)
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="grey50", size=0.15, width=1.5) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="grey50", size=0.15, width=0.3) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="grey30", size=0.15, width=0.3) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="grey70", size=0.15, width=0.3) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 3, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 1/26/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[1]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="blue", size=0.15, width=0.3) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 3, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 1/26/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[1]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="royalblue", size=0.15, width=0.3) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 3, units = "in")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2, units = "in")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.2, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last run on 1/18/22
# 2021-12-28: copied from DEP-LPS project
library("ggplot2")
library(tidyverse)
rm(list=ls())
## import and clean
date = '2022-01-15'
path <- paste("/Users/hyungseokkim/Desktop/LEMI/SFA/Electrokinetics/", date, " ep_ph", sep="")
setwd(path)
filename = paste("info_",date,".txt",sep="")
rd_info = read.delim(filename,sep = ",",header=TRUE,dec = ".")
setwd(paste(path,"vy",sep="/"))
dim(rd_info)
dim(rd_info)[1]
# Created by Hyungseok Kim (hskimm@mit.edu), last run on 1/18/22
# 2021-12-28: copied from DEP-LPS project
library("ggplot2")
library(tidyverse)
rm(list=ls())
## import and clean
date = '2022-01-15'
path <- paste("/Users/hyungseokkim/Desktop/LEMI/SFA/Electrokinetics/", date, " ep_ph", sep="")
setwd(path)
filename = paste("info_",date,".txt",sep="")
rd_info = read.delim(filename,sep = ",",header=TRUE,dec = ".")
setwd(paste(path,"vy",sep="/"))
df = data.frame(Treatment=factor(), Replicate=factor(), Voltage=double(), pH=double(), Velocity=double()) # use only when beginning from scratch
for (ind in c(1:dim(rd_info)[1])) {
if (rd_info$'channel'[ind]>14) next # consider QW#1 device only this time
str = sprintf("%s_R%d_Ch%02d_pH%dp%02d_%s_%02dV_10X_001.ome.txt", rd_info$'cond'[ind],
rd_info$'rep'[ind], rd_info$'channel'[ind], floor(rd_info$'ph'[ind]),
round(100*(rd_info$'ph'[ind] - floor(rd_info$'ph'[ind]))),
rd_info$'light'[ind], rd_info$'voltage'[ind])
rd = read.delim(str, header=TRUE, dec = ".")
for (i in 1:dim(rd)[1]) {
df_temp <- data.frame(
Treatment = rd_info$'cond'[ind],
Replicate = rd_info$'rep'[ind],
Voltage = rd_info$'voltage'[ind],
pH = rd_info$'ph'[ind],
Velocity = rd$'velocity'[i])
df <- rbind(df, df_temp)
}
}
df$"Replicate" <- as.factor(df$"Replicate")
# Created by Hyungseok Kim (hskimm@mit.edu), last run on 1/18/22
# 2021-12-28: copied from DEP-LPS project
library("ggplot2")
library(tidyverse)
rm(list=ls())
## import and clean
date = '2022-01-15'
path <- paste("/Users/hyungseokkim/Desktop/LEMI/SFA/Electrokinetics/", date, " ep_ph", sep="")
setwd(path)
filename = paste("info_",date,".txt",sep="")
rd_info = read.delim(filename,sep = ",",header=TRUE,dec = ".")
setwd(paste(path,"vy",sep="/"))
df = data.frame(Treatment=factor(), Replicate=factor(), Voltage=double(), pH=double(), Velocity=double()) # use only when beginning from scratch
for (ind in c(1:dim(rd_info)[1])) {
if (rd_info$'channel'[ind]>14) next # consider QW#1 device only this time
str = sprintf("%s_R%d_Ch%02d_pH%dp%02d_%s_%02dV_10X_001.ome.txt", rd_info$'cond'[ind],
rd_info$'rep'[ind], rd_info$'channel'[ind], floor(rd_info$'ph'[ind]),
round(100*(rd_info$'ph'[ind] - floor(rd_info$'ph'[ind]))),
rd_info$'light'[ind], rd_info$'voltage'[ind])
rd = read.delim(str, header=TRUE, dec = ".")
for (i in 1:dim(rd)[1]) {
df_temp <- data.frame(
Treatment = rd_info$'cond'[ind],
Replicate = rd_info$'rep'[ind],
Voltage = rd_info$'voltage'[ind],
pH = rd_info$'ph'[ind],
Velocity = rd$'velocity'[i])
df <- rbind(df, df_temp)
}
}
df$"Replicate" <- as.factor(df$"Replicate")
