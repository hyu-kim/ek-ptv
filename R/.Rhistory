panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 3, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 1/26/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[1]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity)) +
# geom_boxplot(lwd=0.1) +
geom_jitter(color="royalblue", size=0.15, width=0.3) +
# geom_point(position=position_jitterdodge())
labs(x="Voltage (V)", y = "Velocity (µm/s)") +
theme(text = element_text(size=10),
title =element_text(size=11, face='bold'),
legend.position = "none",
# axis.text.y = element_blank(),
# axis.text.x = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank(),
axis.ticks.y = element_line(colour = "black", size = 0.25),
axis.ticks.x = element_line(colour = "black", size = 0.25),
strip.background = element_rect(fill=NA),
strip.text = element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(colour = "black", size = 0.1),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
panel.border = element_rect(colour = "black", fill=NA, size=0.2))
setwd("/Users/hyungseokkim/Desktop/LEMI/SFA/Conference/2022-02 GSP/img+data")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 3, units = "in")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.5, units = "in")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2, units = "in")
ggsave(paste("ek_stat",".eps", sep=""), width = 3, height = 2.2, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last run on 1/18/22
# 2021-12-28: copied from DEP-LPS project
library("ggplot2")
library(tidyverse)
rm(list=ls())
## import and clean
date = '2022-01-15'
path <- paste("/Users/hyungseokkim/Desktop/LEMI/SFA/Electrokinetics/", date, " ep_ph", sep="")
setwd(path)
filename = paste("info_",date,".txt",sep="")
rd_info = read.delim(filename,sep = ",",header=TRUE,dec = ".")
setwd(paste(path,"vy",sep="/"))
dim(rd_info)
dim(rd_info)[1]
# Created by Hyungseok Kim (hskimm@mit.edu), last run on 1/18/22
# 2021-12-28: copied from DEP-LPS project
library("ggplot2")
library(tidyverse)
rm(list=ls())
## import and clean
date = '2022-01-15'
path <- paste("/Users/hyungseokkim/Desktop/LEMI/SFA/Electrokinetics/", date, " ep_ph", sep="")
setwd(path)
filename = paste("info_",date,".txt",sep="")
rd_info = read.delim(filename,sep = ",",header=TRUE,dec = ".")
setwd(paste(path,"vy",sep="/"))
df = data.frame(Treatment=factor(), Replicate=factor(), Voltage=double(), pH=double(), Velocity=double()) # use only when beginning from scratch
for (ind in c(1:dim(rd_info)[1])) {
if (rd_info$'channel'[ind]>14) next # consider QW#1 device only this time
str = sprintf("%s_R%d_Ch%02d_pH%dp%02d_%s_%02dV_10X_001.ome.txt", rd_info$'cond'[ind],
rd_info$'rep'[ind], rd_info$'channel'[ind], floor(rd_info$'ph'[ind]),
round(100*(rd_info$'ph'[ind] - floor(rd_info$'ph'[ind]))),
rd_info$'light'[ind], rd_info$'voltage'[ind])
rd = read.delim(str, header=TRUE, dec = ".")
for (i in 1:dim(rd)[1]) {
df_temp <- data.frame(
Treatment = rd_info$'cond'[ind],
Replicate = rd_info$'rep'[ind],
Voltage = rd_info$'voltage'[ind],
pH = rd_info$'ph'[ind],
Velocity = rd$'velocity'[i])
df <- rbind(df, df_temp)
}
}
df$"Replicate" <- as.factor(df$"Replicate")
# Created by Hyungseok Kim (hskimm@mit.edu), last run on 1/18/22
# 2021-12-28: copied from DEP-LPS project
library("ggplot2")
library(tidyverse)
rm(list=ls())
## import and clean
date = '2022-01-15'
path <- paste("/Users/hyungseokkim/Desktop/LEMI/SFA/Electrokinetics/", date, " ep_ph", sep="")
setwd(path)
filename = paste("info_",date,".txt",sep="")
rd_info = read.delim(filename,sep = ",",header=TRUE,dec = ".")
setwd(paste(path,"vy",sep="/"))
df = data.frame(Treatment=factor(), Replicate=factor(), Voltage=double(), pH=double(), Velocity=double()) # use only when beginning from scratch
for (ind in c(1:dim(rd_info)[1])) {
if (rd_info$'channel'[ind]>14) next # consider QW#1 device only this time
str = sprintf("%s_R%d_Ch%02d_pH%dp%02d_%s_%02dV_10X_001.ome.txt", rd_info$'cond'[ind],
rd_info$'rep'[ind], rd_info$'channel'[ind], floor(rd_info$'ph'[ind]),
round(100*(rd_info$'ph'[ind] - floor(rd_info$'ph'[ind]))),
rd_info$'light'[ind], rd_info$'voltage'[ind])
rd = read.delim(str, header=TRUE, dec = ".")
for (i in 1:dim(rd)[1]) {
df_temp <- data.frame(
Treatment = rd_info$'cond'[ind],
Replicate = rd_info$'rep'[ind],
Voltage = rd_info$'voltage'[ind],
pH = rd_info$'ph'[ind],
Velocity = rd$'velocity'[i])
df <- rbind(df, df_temp)
}
}
df$"Replicate" <- as.factor(df$"Replicate")
# Created by Hyungseok Kim (hskimm@mit.edu), last run on 2/11/22
# 2021-12-28: copied from DEP-LPS project
# 2022-02-11: postprocess data on Jan29
library("ggplot2")
library(tidyverse)
rm(list=ls())
## import and clean
date = '2022-01-29'
path <- paste("/Users/hk/Desktop/LEMI/SFA/Electrokinetics/", date, " ep_ph 2", sep="")
setwd(path)
filename = paste("info_",date,".txt",sep="")
rd_info = read.delim(filename,sep = ",",header=TRUE,dec = ".")
setwd(paste(path,"vy",sep="/"))
df = data.frame(Treatment=factor(), Replicate=factor(), Voltage=double(), pH=double(), Velocity=double()) # use only when beginning from scratch
View(rd_info)
# Created by Hyungseok Kim (hskimm@mit.edu), last run on 2/11/22
# 2021-12-28: copied from DEP-LPS project
# 2022-02-11: postprocess data on Jan29
library("ggplot2")
library(tidyverse)
rm(list=ls())
## import and clean
date = '2022-01-29'
path <- paste("/Users/hk/Desktop/LEMI/SFA/Electrokinetics/", date, " ep_ph 2", sep="")
setwd(path)
filename = paste("info_",date,".txt",sep="")
rd_info = read.delim(filename,sep = ",",header=TRUE,dec = ".")
setwd(paste(path,"vy",sep="/"))
df = data.frame(Treatment=factor(), Replicate=factor(), Voltage=double(), pH=double(), Velocity=double()) # use only when beginning from scratch
for (ind in c(1:dim(rd_info)[1])) {
if (rd_info$'channel'[ind]>14) next # consider QW#1 device only this time
str = sprintf("%s_R%d_Ch%02d_pH%dp%02d_%s_%02dV_10X_001.ome.txt", rd_info$'cond'[ind],
rd_info$'rep'[ind], rd_info$'channel'[ind], floor(rd_info$'ph'[ind]),
round(100*(rd_info$'ph'[ind] - floor(rd_info$'ph'[ind]))),
rd_info$'light'[ind], rd_info$'voltage'[ind])
rd = read.delim(str, header=TRUE, dec = ".")
for (i in 1:dim(rd)[1]) {
df_temp <- data.frame(
Treatment = rd_info$'cond'[ind],
Replicate = rd_info$'rep'[ind],
Voltage = rd_info$'voltage'[ind],
pH = rd_info$'ph'[ind],
Velocity = rd$'velocity'[i])
df <- rbind(df, df_temp)
}
}
df$"Replicate" <- as.factor(df$"Replicate")
path
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 2/11/22
# Continued from create_df.R
# Generates linear model to obtain regression coefficient for mobility
# Parameters = Voltage (float), Replicate (categorical), (Treatment (categorical))
df$"Replicate" <- as.factor(df$"Replicate") # Replicate into categorical variables
eps_r = 80; # relative permitivity []
eps_0 = 8.854e-12; # vacuum permitivity [F/m]
eta = 8.66e-4; # viscosity [Pa-s]
l = 10e-3; # channel length [m]
# subset df and loop
trts = c('Ax')
reps = c(1,2,3)
phs = c(8.00, 8.30, 8.58, 8.90, 9.21, 9.48)
setwd(paste(path,"figs",sep="/"))
mu_df <- data.frame(Treatment=factor(), Replicate=factor(), pH=double(), Mobility=double())
for (ph in phs){ # for passing into "plot_all.R"
for (rep in reps){
rep <- rd_info$rep[rd_info$ph==ph][1]
df_params <- df[(df$pH==ph)&(df$Replicate==rep),]
str <- sprintf("lm_%s_R%s_pH%d_.txt", trt, rep, ph)
res <- lm(Velocity ~ Voltage, data = df_params)
summary(res)
sink(str)
print(summary(res))
sink()
coef <- res$coefficients[[2]] # [µm / V-s]
mu <- coef * l * 1e-6 # [m2 / V-s]
mu_df_temp <- data.frame(
Treatment = trt,
Replicate = rep,
pH = ph,
Mobility = mu
)
mu_df <- rbind(mu_df, mu_df_temp)
}
}
write.table(mu_df, "mu_ek.txt", sep=',', row.names = FALSE)
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 2/11/22
# Continued from create_df.R
# Generates linear model to obtain regression coefficient for mobility
# Parameters = Voltage (float), Replicate (categorical), (Treatment (categorical))
df$"Replicate" <- as.factor(df$"Replicate") # Replicate into categorical variables
eps_r = 80; # relative permitivity []
eps_0 = 8.854e-12; # vacuum permitivity [F/m]
eta = 8.66e-4; # viscosity [Pa-s]
l = 10e-3; # channel length [m]
# subset df and loop
trt <- "Ax"
reps <- c(1,2,3)
phs <- c(8.00, 8.30, 8.58, 8.90, 9.21, 9.48)
setwd(paste(path,"figs",sep="/"))
mu_df <- data.frame(Treatment=factor(), Replicate=factor(), pH=double(), Mobility=double())
for (ph in phs){ # for passing into "plot_all.R"
for (rep in reps){
rep <- rd_info$rep[rd_info$ph==ph][1]
df_params <- df[(df$pH==ph)&(df$Replicate==rep),]
str <- sprintf("lm_%s_R%s_pH%d_.txt", trt, rep, ph)
res <- lm(Velocity ~ Voltage, data = df_params)
summary(res)
sink(str)
print(summary(res))
sink()
coef <- res$coefficients[[2]] # [µm / V-s]
mu <- coef * l * 1e-6 # [m2 / V-s]
mu_df_temp <- data.frame(
Treatment = trt,
Replicate = rep,
pH = ph,
Mobility = mu
)
mu_df <- rbind(mu_df, mu_df_temp)
}
}
write.table(mu_df, "mu_ek.txt", sep=',', row.names = FALSE)
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 2/11/22
# Continued from create_df.R
# Generates linear model to obtain regression coefficient for mobility
# Parameters = Voltage (float), Replicate (categorical), (Treatment (categorical))
df$"Replicate" <- as.factor(df$"Replicate") # Replicate into categorical variables
eps_r = 80; # relative permitivity []
eps_0 = 8.854e-12; # vacuum permitivity [F/m]
eta = 8.66e-4; # viscosity [Pa-s]
l = 10e-3; # channel length [m]
# subset df and loop
trt <- "Ax"
reps <- c(1,2,3)
phs <- c(8.00, 8.30, 8.58, 8.90, 9.21, 9.48)
setwd(paste(path,"figs",sep="/"))
mu_df <- data.frame(Treatment=factor(), Replicate=factor(), pH=double(), Mobility=double())
for (ph in phs){ # for passing into "plot_all.R"
for (rep in reps){
rep <- rd_info$rep[rd_info$ph==ph][1]
df_params <- df[(df$pH==ph)&(df$Replicate==rep),]
str <- sprintf("lm_%s_R%s_pH%g_.txt", trt, rep, ph)
res <- lm(Velocity ~ Voltage, data = df_params)
summary(res)
sink(str)
print(summary(res))
sink()
coef <- res$coefficients[[2]] # [µm / V-s]
mu <- coef * l * 1e-6 # [m2 / V-s]
mu_df_temp <- data.frame(
Treatment = trt,
Replicate = rep,
pH = ph,
Mobility = mu
)
mu_df <- rbind(mu_df, mu_df_temp)
}
}
write.table(mu_df, "mu_ek.txt", sep=',', row.names = FALSE)
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 2/11/22
# Continued from create_df.R
# Generates linear model to obtain regression coefficient for mobility
# Parameters = Voltage (float), Replicate (categorical), (Treatment (categorical))
df$"Replicate" <- as.factor(df$"Replicate") # Replicate into categorical variables
eps_r = 80; # relative permitivity []
eps_0 = 8.854e-12; # vacuum permitivity [F/m]
eta = 8.66e-4; # viscosity [Pa-s]
l = 10e-3; # channel length [m]
# subset df and loop
trt <- "Ax"
reps <- c("1","2","3")
phs <- c(8.00, 8.30, 8.58, 8.90, 9.21, 9.48)
setwd(paste(path,"figs",sep="/"))
mu_df <- data.frame(Treatment=factor(), Replicate=factor(), pH=double(), Mobility=double())
for (ph in phs){ # for passing into "plot_all.R"
for (rep in reps){
rep <- rd_info$rep[rd_info$ph==ph][1]
df_params <- df[(df$pH==ph)&(df$Replicate==rep),]
str <- sprintf("lm_%s_R%s_pH%g_.txt", trt, rep, ph)
res <- lm(Velocity ~ Voltage, data = df_params)
summary(res)
sink(str)
print(summary(res))
sink()
coef <- res$coefficients[[2]] # [µm / V-s]
mu <- coef * l * 1e-6 # [m2 / V-s]
mu_df_temp <- data.frame(
Treatment = trt,
Replicate = rep,
pH = ph,
Mobility = mu
)
mu_df <- rbind(mu_df, mu_df_temp)
}
}
write.table(mu_df, "mu_ek.txt", sep=',', row.names = FALSE)
df_params$Replicate
df_params <- df[(df$pH==ph)&(df$Replicate=="2"),]
# Created by Hyungseok Kim (hskimm@mit.edu), last modified on 2/11/22
# Continued from create_df.R
# Generates linear model to obtain regression coefficient for mobility
# Parameters = Voltage (float), Replicate (categorical), (Treatment (categorical))
df$"Replicate" <- as.factor(df$"Replicate") # Replicate into categorical variables
eps_r = 80; # relative permitivity []
eps_0 = 8.854e-12; # vacuum permitivity [F/m]
eta = 8.66e-4; # viscosity [Pa-s]
l = 10e-3; # channel length [m]
# subset df and loop
trt <- "Ax"
reps <- c("1","2","3")
phs <- c(8.00, 8.30, 8.58, 8.90, 9.21, 9.48)
setwd(paste(path,"figs",sep="/"))
mu_df <- data.frame(Treatment=factor(), Replicate=factor(), pH=double(), Mobility=double())
for (ph in phs){ # for passing into "plot_all.R"
for (rep in reps){
df_params <- df[(df$pH==ph)&(df$Replicate==rep),]
str <- sprintf("lm_%s_R%s_pH%g.txt", trt, rep, ph)
res <- lm(Velocity ~ Voltage, data = df_params)
summary(res)
sink(str)
print(summary(res))
sink()
coef <- res$coefficients[[2]] # [µm / V-s]
mu <- coef * l * 1e-6 # [m2 / V-s]
mu_df_temp <- data.frame(
Treatment = trt,
Replicate = rep,
pH = ph,
Mobility = mu
)
mu_df <- rbind(mu_df, mu_df_temp)
}
}
write.table(mu_df, "mu_ek.txt", sep=',', row.names = FALSE)
# Created by Hyungseok Kim (hskimm@mit.edu), last run 2/11/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[1]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity, colour=Replicate)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(title=paste("pH",ph,sep=" "), x="Voltage (V)", y = "Velocity (µm/s)")
# setwd(paste(path,"figs",sep="/"))
ggsave(paste("pH_",ph,".eps", sep=""), width = 5, height = 4, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last run 2/11/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[2]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity, colour=Replicate)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(title=paste("pH",ph,sep=" "), x="Voltage (V)", y = "Velocity (µm/s)")
# setwd(paste(path,"figs",sep="/"))
ggsave(paste("pH_",ph,".eps", sep=""), width = 5, height = 4, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last run 2/11/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[3]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity, colour=Replicate)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(title=paste("pH",ph,sep=" "), x="Voltage (V)", y = "Velocity (µm/s)")
# setwd(paste(path,"figs",sep="/"))
ggsave(paste("pH_",ph,".eps", sep=""), width = 5, height = 4, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last run 2/11/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[4]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity, colour=Replicate)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(title=paste("pH",ph,sep=" "), x="Voltage (V)", y = "Velocity (µm/s)")
# setwd(paste(path,"figs",sep="/"))
ggsave(paste("pH_",ph,".eps", sep=""), width = 5, height = 4, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last run 2/11/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[5]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity, colour=Replicate)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(title=paste("pH",ph,sep=" "), x="Voltage (V)", y = "Velocity (µm/s)")
# setwd(paste(path,"figs",sep="/"))
ggsave(paste("pH_",ph,".eps", sep=""), width = 5, height = 4, units = "in")
# Created by Hyungseok Kim (hskimm@mit.edu), last run 2/11/22
# Continued from create_df.R
library("ggplot2")
library(tidyverse)
# subset df by each treatment
trt = 'Ax'
ph = phs[6]
df_p <- df[(df$Treatment==trt)&(df$pH==ph),]
df_p$"Voltage" <- as.factor(df_p$"Voltage")
df_p$"Replicate" <- as.factor(df_p$"Replicate")
# create a boxplot, grouped by voltage
ggplot(df_p, aes(x=Voltage, y=Velocity, colour=Replicate)) +
geom_boxplot() +
# geom_point(position=position_jitterdodge())
labs(title=paste("pH",ph,sep=" "), x="Voltage (V)", y = "Velocity (µm/s)")
# setwd(paste(path,"figs",sep="/"))
ggsave(paste("pH_",ph,".eps", sep=""), width = 5, height = 4, units = "in")
getwd()
library("ggplot2")
library(tidyverse)
library(Rmisc)
mu_df %>%
mutate(Treatment = factor(Treatment, levels=trts)) %>%
mutate(Replicate = factor(Replicate, levels=reps)) %>%
# ggplot(aes(x=pH, y=Mobility * 1e9, fill=Replicate)) +
ggplot(aes(x=pH, y=Mobility * 1e9)) +
# geom_bar(stat = "summary", fun = mean, size = 0.2, width = 0.75, fill=NA, colour='black') +
geom_line() + geom_point() +
# geom_point(stroke = 0.2, size = 1, pch = 21, position = position_jitterdodge(0.3)) +
labs(x='pH', y=expression(paste('Mobility (','10'^{-9}, ' m'^2,'/ V-s)')))
mu_df %>%
mutate(Treatment = factor(Treatment, levels=trts)) %>%
mutate(Replicate = factor(Replicate, levels=reps)) %>%
# ggplot(aes(x=pH, y=Mobility * 1e9, fill=Replicate)) +
ggplot(aes(x=pH, y=Mobility * 1e9)) +
geom_bar(stat = "summary", fun = mean, size = 0.2, width = 0.75, fill=NA, colour='black') +
# geom_line() +
geom_point() +
# geom_point(stroke = 0.2, size = 1, pch = 21, position = position_jitterdodge(0.3)) +
labs(x='pH', y=expression(paste('Mobility (','10'^{-9}, ' m'^2,'/ V-s)')))
mu_df %>%
mutate(Treatment = factor(Treatment, levels=trts)) %>%
mutate(Replicate = factor(Replicate, levels=reps)) %>%
# ggplot(aes(x=pH, y=Mobility * 1e9, fill=Replicate)) +
ggplot(aes(x=pH, y=Mobility * 1e9)) +
geom_bar(stat = "summary", fun = mean, size = 0.2, width = 0.1, fill=NA, colour='black') +
# geom_line() +
geom_point() +
# geom_point(stroke = 0.2, size = 1, pch = 21, position = position_jitterdodge(0.3)) +
labs(x='pH', y=expression(paste('Mobility (','10'^{-9}, ' m'^2,'/ V-s)')))
mu_df_f <- mu_df[mu_df$Replicate=="1",]
mu_df_f %>%
mutate(Treatment = factor(Treatment, levels=trts)) %>%
mutate(Replicate = factor(Replicate, levels=reps)) %>%
# ggplot(aes(x=pH, y=Mobility * 1e9, fill=Replicate)) +
ggplot(aes(x=pH, y=Mobility * 1e9)) +
geom_bar(stat = "summary", fun = mean, size = 0.2, width = 0.1, fill=NA, colour='black') +
# geom_line() +
geom_point() +
# geom_point(stroke = 0.2, size = 1, pch = 21, position = position_jitterdodge(0.3)) +
labs(x='pH', y=expression(paste('Mobility (','10'^{-9}, ' m'^2,'/ V-s)')))
mu_df_f %>%
mutate(Treatment = factor(Treatment, levels=trts)) %>%
mutate(Replicate = factor(Replicate, levels=reps)) %>%
# ggplot(aes(x=pH, y=Mobility * 1e9, fill=Replicate)) +
ggplot(aes(x=pH, y=Mobility * 1e9)) +
# geom_bar(stat = "summary", fun = mean, size = 0.2, width = 0.1, fill=NA, colour='black') +
geom_line() +
geom_point() +
# geom_point(stroke = 0.2, size = 1, pch = 21, position = position_jitterdodge(0.3)) +
labs(x='pH', y=expression(paste('Mobility (','-10'^{-9}, ' m'^2,'/ V-s)')))
setwd(paste(path,"figs",sep="/"))
ggsave('mobility_R1.eps', width = 4, height = 3.5, units = "in")
ggsave('mobility_R1.eps', width = 5, height = 3.5, units = "in")
